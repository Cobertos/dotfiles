---
#TODO: env(##suffixes)

- hosts: localhost
  name: Packages
  pre_tasks:
    - name: Update apt
      become: yes
      apt:
        cache_valid_time: 1800
        update_cache: yes
  tasks:
    - name: Install apt repositories
      become: yes
      apt_repository:
        repo: '{{ item }}'
      loop:
        - ppa:kritalime/ppa
        - ppa:obsproject/obs-studio
    - name: Install apt packages
      become: yes
      package:
        name:
          - p7zip-full
          - ffmpeg
          # Need a media player
          - git
          - krita
          - nmap
          #TODO: nvm... requires a curl
          - obs-studio
          #TODO: postman is a tar.gz
          - vlc
          - xclip
        state: present
    - name: Install debs
      become: yes
      apt:
        deb: '{{ item }}'
      loop:
        - https://discordapp.com/api/download?platform=linux&format=deb
        - https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2020.03.04_amd64.deb
        - https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - name: Install packages on Windows
      when: ansible_facts['os_family'] == "Windows"
      win_chocolatey:
        name:
          - 7zip
          - brave
          - googlechrome
          - ConEmu
          - discord
          - dropbox
          - ffmpeg
          #- fluent-terminal
          - foobar2000
          - handle
          - insideclipboard
          - krita
          - nmap
          #- notion #Don't think it worked
          - obs-studio
          - openhardwaremonitor
          - postman
          - pngcheck
          - procexp
          - procmon
          #- rammap #Bad checksum
          - regshot #Excess Dependencies
          - screentogif
          - sharex
          - sublimetext3
          - vlc
    - name: Install git on Windows
      when: ansible_facts['os_family'] == "Windows"
      win_chocolatey:
        name: git.install
        params: /NoGuiHereIntegration /SChannel

- hosts: localhost
  name: Dotfiles
  tasks:
    # - name: Ensure dotfiles 'onpath' is on path
    #   win_path:
    #     elements:
    #     - '{{ playbook_dir }}\onpath'
    - name: Ensure folders for Symlinks
      file:
        path: ~/.config/yamllint
        state: directory
    - name: Symlink dotfile config files
      file:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        state: link
        force: yes
      loop:
        - { src: '{{ playbook_dir }}/git/.gitconfig', dest: ~/.gitconfig }
        - { src: '{{ playbook_dir }}/git/.gitignore', dest: ~/.gitignore }
        - { src: '{{ playbook_dir }}/.bashrc', dest: ~/.bashrc }
        - { src: '{{ playbook_dir }}/.vuerc', dest: ~/.vuerc }
        - { src: '{{ playbook_dir }}/.config/yamllint/config', dest: ~/.config/yamllint/config }
    - name: Install Sublime
      import_tasks: ansible-tasks/sublime.yaml
    - name: Install ConEmu
      import_tasks: ansible-tasks/conemu.yaml


    - name: Install nvm
      import_tasks: ansible-tasks/nvm.yaml
    - name: Install npm packages globally
      npm:
        name: '{{ item }}'
        global: yes
      loop:
        - '@vue/cli'      #CLI tool
        - 'serverless'    #CLI tool
        - 'eslint_d'      #Sublime Text Plugin Dependency
        - 'lessmd'        #CLI utility to preview Markdown
        - 'js-yaml'       #Useful tool
    #TODO: Do we still want this?
    #Ability to use global packages in require() with NODE_PATH
    #Should work with NVM https://stackoverflow.com/a/49293370/2759427
    #AppendToEnvVar(NpmInstallGlobal.npmRoot(), "NODE_PATH")()

    # - name: Install pyenv
    #   import_tasks: tasks/pyenv.yaml
    # - name: Install pip packages globally
    #   pip:
    #     name: yamllint


    

- hosts: all
  name: Windows Packages

# - hosts: all
#   name: Windows specific
#   tasks:
#     - name: Registry
#     win_regedit:
#       path: HKCU:\Software\MyCompany
#       name: hello
#       data: 1337
#       type: dword
#     loop:
#       - { path: }

      # #Set the communication ducking to 'Do Nothing'
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Software\\Microsoft\\Multimedia\\Audio', \
      #   'UserDuckingPreference', winreg.REG_DWORD, 3)() #Default is key not present
      # #A lot from: https://gist.github.com/NickCraver/7ebf9efbfd0c3eab72e9
      # #Privacy related
      # # Disable "Allow advertisers to use my advertising ID", default 1
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Software\\Microsoft\\Windows\\CurrentVersion\\AdvertisingInfo', \
      #   'Enabled', winreg.REG_DWORD, 0)()
      # # WiFi sense shares the password for the WiFi with contacts in Outlook, Skype, etc (wtf...?)
      # # WiFi Sense: HotSpot Sharing: Disable, default 1
      # SetRegKey(winreg.HKEY_LOCAL_MACHINE, 'Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowWiFiHotSpotReporting', \
      #   'value', winreg.REG_DWORD, 0)()
      # # WiFi Sense: Shared HotSpot Auto-Connect: Disable, default 1
      # SetRegKey(winreg.HKEY_LOCAL_MACHINE, 'Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowAutoConnectToWiFiSenseHotspots', \
      #   'value', winreg.REG_DWORD, 0)()
      # # Disable Bing search results, rewards, etc in search, all really annoying default 1
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Software\\Microsoft\\Windows\\CurrentVersion\\Search', \
      #   'BingSearchEnabled', winreg.REG_DWORD, 0)()
      # #Disable Activity sharing
      # SetRegKey(winreg.HKEY_LOCAL_MACHINE, 'Software\\Policies\\Microsoft\\Windows\\System', \
      #   'EnableActivityFeed', winreg.REG_DWORD, 0)()
      # SetRegKey(winreg.HKEY_LOCAL_MACHINE, 'Software\\Policies\\Microsoft\\Windows\\System', \
      #   'PublishUserActivities', winreg.REG_DWORD, 0)()
      # SetRegKey(winreg.HKEY_LOCAL_MACHINE, 'Software\\Policies\\Microsoft\\Windows\\System', \
      #   'UploadUserActivities', winreg.REG_DWORD, 0)()
      # #Functionality related
      # #Explorer launch to "This PC" (1) instead of default "Quick Access" (2)
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced', \
      #   'LaunchTo', winreg.REG_DWORD, 1)()
      # #Disable Recent Items and Frequent Folders (to stop porn and other stuff from popping up)
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Software\\Microsoft\\Windows\\CurrentVersion\\Explorer', \
      #   'ShowRecent', winreg.REG_DWORD, 0)()
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Software\\Microsoft\\Windows\\CurrentVersion\\Explorer', \
      #   'ShowFrequent', winreg.REG_DWORD, 0)()
      # #Show hidden files (show is 1, hide is 2)
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced', \
      #   'Hidden', winreg.REG_DWORD, 1)() #Defaults to 2 (hidden)
      # #Show file extensions (show is 0, hide is 1)
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced', \
      #   'HideFileExt', winreg.REG_DWORD, 0)() #Defaults to 1 (hidden)
      # #Disable Sticky Keys, Filter Key, Toggle Keys (I dont think these work until a restart?)
      # #https://answers.microsoft.com/en-us/windows/forum/windows_vista-desktop/i-cant-turn-off-sticky-keys/a7c9fc02-2d0f-4db6-89fb-e36eca3e2ac7
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Control Panel\\Accessibility\\StickyKeys', \
      #   'Flags', winreg.REG_SZ, '506')() #disable sticky keys
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Control Panel\\Accessibility\\Keyboard Response', \
      #   'Flags', winreg.REG_SZ, '122')() #Disable filter keys
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Control Panel\\Accessibility\\ToggleKeys', \
      #   'Flags', winreg.REG_SZ, '58')() #Disable toggle keys
      # #Disable mouse precision
      # #https://www.tenforums.com/tutorials/101691-turn-off-enhance-pointer-precision-windows.html
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Control Panel\\Mouse', \
      #   'MouseSpeed', winreg.REG_SZ, '0')()
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Control Panel\\Mouse', \
      #   'MouseThreshold1', winreg.REG_SZ, '0')()
      # SetRegKey(winreg.HKEY_CURRENT_USER, 'Control Panel\\Mouse', \
      #   'MouseThreshold2', winreg.REG_SZ, '0')()

#TODO: 
# def _scriptDir(*pathParts):
#       return env(os.path.join(scriptDir, *pathParts))


#     # == WINDOWS ONLY ==
#     #Paint.NET - Supports Windows store version
#     if platform.system() == "Windows":
#       paintNetWindowsStore = bool(subprocess.check_output("powershell -Command \"Get-AppxPackage -Name dotPDNLLC.paint.net\""))
#       paintNetProgramFiles = bool(os.path.exists("C:\\Program Files\\paint.net\\Effects")) #Shitty test but what you gonna do...
#       paintNetInstalled = paintNetWindowsStore or paintNetProgramFiles
#       print(f"Paint.NET is {'' if paintNetInstalled else 'NOT '}installed")
#       if paintNetInstalled:
#         paintNetDataDir = (
#           #Windows store requires the creation of a folder in Documents
#           #https://forums.getpaint.net/topic/112007-windows-store-version-and-plugins/
#           f"{userProfile}\\Documents\\paint.net App Files" if paintNetWindowsStore else 
#           #Otherwise use the default program files directory that it normally installs into
#           f"C:\\Program Files\\paint.net")

#         #if paintNetWindowsStore:
#         #  ensureDirectory(paintNetDataDir)

#         #addSymlink(f"{dropboxDir}\\Environment\\Paint.NET\\Effects", f"{paintNetDataDir}\\Effects")
#         #addSymlink(f"{dropboxDir}\\Environment\\Paint.NET\\FileTypes", f"{paintNetDataDir}\\FileTypes")
#         #addSymlink(f"{dropboxDir}\\Environment\\Paint.NET\\Paint.NET User Files", f"{userProfile}\\Documents\\paint.net User Files")


#       #Theme personanlization - Use .theme file for ease without a ton of reg editting
#       #You can also sync it if you're using the same Windows account
#       #https://docs.microsoft.com/en-us/windows/win32/controls/themesfileformat-overview#slideshow-section
#       #%LOCALAPPDATA%\Microsoft\Windows\Themes\
#       SetTheme(env(f"{scriptDir}\\cobertos.theme"))()