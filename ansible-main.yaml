---
- hosts: localhost
  name: Everything
  tasks:
    # - name: Ensure dotfiles 'onpath' is on path
    #   win_path:
    #     elements:
    #     - '{{ playbook_dir }}\onpath'
    - name: Ensure folders for Symlinks
      file:
        path: ~/.config/yamllint
        state: directory
    - name: Symlink dotfile config files
      file:
        src: '{{ item.src | dotfiles_env_test(dotfiles_env) }}'
        dest: '{{ item.dest }}'
        state: link
        force: yes
      loop:
        - { src: '{{ playbook_dir }}/git/.gitconfig', dest: ~/.gitconfig }
        - { src: '{{ playbook_dir }}/git/.gitignore', dest: ~/.gitignore }
        - { src: '{{ playbook_dir }}/.bashrc', dest: ~/.bashrc }
        - { src: '{{ playbook_dir }}/.vuerc', dest: ~/.vuerc }
        - { src: '{{ playbook_dir }}/.config/yamllint/config', dest: ~/.config/yamllint/config }
    - name: Install Packages
      import_tasks: ansible-tasks/packages.yaml
    - name: Install Sublime
      import_tasks: ansible-tasks/sublime.yaml
    - name: Install ConEmu
      import_tasks: ansible-tasks/conemu.yaml


    - name: Install nvm
      import_tasks: ansible-tasks/nvm.yaml
    - name: Install npm packages globally
      npm:
        name: '{{ item }}'
        global: yes
      loop:
        - '@vue/cli'      #CLI tool
        - 'serverless'    #CLI tool
        - 'eslint_d'      #Sublime Text Plugin Dependency
        - 'lessmd'        #CLI utility to preview Markdown
        - 'js-yaml'       #Useful tool
    #TODO: Do we still want this?
    #Ability to use global packages in require() with NODE_PATH
    #Should work with NVM https://stackoverflow.com/a/49293370/2759427
    #AppendToEnvVar(NpmInstallGlobal.npmRoot(), "NODE_PATH")()

    # - name: Install pyenv
    #   import_tasks: tasks/pyenv.yaml
    # - name: Install pip packages globally
    #   pip:
    #     name: yamllint


- hosts: localhost
  name: Windows specific
  when: ansible_facts['os_family'] == "Windows"
  tasks:
    - name: Registry
    win_regedit:
      path: {{ item.path }}
      name: {{ item.name }}
      data: {{ item.data }}
      type: {{ item.type }}
    loop:
      #Set the communication ducking to 'Do Nothing' | Default, key is not present
      - { path: HKCU:\Software\Microsoft\Multimedia\Audio, name: UserDuckingPreference, data: 3, type: dword }
      # A lot from: https://gist.github.com/NickCraver/7ebf9efbfd0c3eab72e9
      # Privacy related
      # Disable "Allow advertisers to use my advertising ID", default 1
      - { path: HKCU:\Software\Microsoft\CurrentVersion\AdvertisingInfo, name: Enabled, data: 0, type: dword }
      # WiFi sense shares the password for the WiFi with contacts in Outlook, Skype, etc (wtf...?)
      # WiFi Sense: HotSpot Sharing: Disable, default 1
      - { path: HKLM:\Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowWiFiHotSpotReporting, name: value, data: 0, type: dword }
      # WiFi Sense: Shared HotSpot Auto-Connect: Disable, default 1
      - { path: HKLM:\Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowAutoConnectToWiFiSenseHotspots, name: value, data: 0, type: dword }
      # Disable Bing search results, rewards, etc in search, all really annoying default 1
      - { path: HKCU:\Software\\Microsoft\\Windows\\CurrentVersion\\Search, name: BingSearchEnabled, data: 0, type: dword }
      # Disable Activity sharing
      - { path: HKLM:\Software\\Policies\\Microsoft\\Windows\\System, name: EnableActivityFeed, data: 0, type: dword }
      - { path: HKLM:\Software\\Policies\\Microsoft\\Windows\\System, name: PublishUserActivities, data: 0, type: dword }
      - { path: HKLM:\Software\\Policies\\Microsoft\\Windows\\System, name: UploadUserActivities, data: 0, type: dword }
      # Functionality related
      # Explorer launch to "This PC" (1) instead of default "Quick Access" (2)
      - { path: HKCU:\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced, name: LaunchTo, data: 1, type: dword }
      # Disable Recent Items and Frequent Folders (to stop porn and other stuff from popping up)
      - { path: HKCU:\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer, name: ShowRecent, data: 0, type: dword }
      - { path: HKCU:\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer, name: ShowFrequent, data: 0, type: dword }
      #Show hidden files (show is 1, hide is 2 which is default)
      - { path: HKCU:\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced, name: Hidden, data: 1, type: dword }
      #Show file extensions (show is 0, hide is 1 which is default)
      - { path: HKCU:\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced, name: HideFileExt, data: 0, type: dword }
      #Disable Sticky Keys, Filter Key, Toggle Keys (I dont think these work until a restart?)
      #https://answers.microsoft.com/en-us/windows/forum/windows_vista-desktop/i-cant-turn-off-sticky-keys/a7c9fc02-2d0f-4db6-89fb-e36eca3e2ac7
      - { path: HKCU:\Control Panel\\Accessibility\\StickyKey, name: Flags, data: '506', type: string } #disable sticky keys
      - { path: HKCU:\Control Panel\\Accessibility\\Keyboard Response', name: Flags, data: '122', type: string } #disable filter keys
      - { path: HKCU:\Control Panel\\Accessibility\\ToggleKeys, name: Flags, data: '58', type: string } #disable toggle keys
      #Disable mouse precision
      #https://www.tenforums.com/tutorials/101691-turn-off-enhance-pointer-precision-windows.html
      - { path: HKCU:\Control Panel\\Mouse, name: MouseSpeed, data: '0', type: string }
      - { path: HKCU:\Control Panel\\MouseThreshold1, name: MouseSpeed, data: '0', type: string }
      - { path: HKCU:\Control Panel\\MouseThreshold2, name: MouseSpeed, data: '0', type: string }
      #Disabled auto device rotation
      #https://www.windowscentral.com/how-disable-screen-automatic-rotation-windows-10
      - { path: HKLM:\Software\Microsoft\Windows\CurrentVersion\AutoRotation, name: Enable, data: 0, type: dword }




#TODO:
#     #Paint.NET - Supports Windows store version
#     if platform.system() == "Windows":
#       paintNetWindowsStore = bool(subprocess.check_output("powershell -Command \"Get-AppxPackage -Name dotPDNLLC.paint.net\""))
#       paintNetProgramFiles = bool(os.path.exists("C:\\Program Files\\paint.net\\Effects")) #Shitty test but what you gonna do...
#       paintNetInstalled = paintNetWindowsStore or paintNetProgramFiles
#       print(f"Paint.NET is {'' if paintNetInstalled else 'NOT '}installed")
#       if paintNetInstalled:
#         paintNetDataDir = (
#           #Windows store requires the creation of a folder in Documents
#           #https://forums.getpaint.net/topic/112007-windows-store-version-and-plugins/
#           f"{userProfile}\\Documents\\paint.net App Files" if paintNetWindowsStore else 
#           #Otherwise use the default program files directory that it normally installs into
#           f"C:\\Program Files\\paint.net")

#         #if paintNetWindowsStore:
#         #  ensureDirectory(paintNetDataDir)

#         #addSymlink(f"{dropboxDir}\\Environment\\Paint.NET\\Effects", f"{paintNetDataDir}\\Effects")
#         #addSymlink(f"{dropboxDir}\\Environment\\Paint.NET\\FileTypes", f"{paintNetDataDir}\\FileTypes")
#         #addSymlink(f"{dropboxDir}\\Environment\\Paint.NET\\Paint.NET User Files", f"{userProfile}\\Documents\\paint.net User Files")


#       #Theme personanlization - Use .theme file for ease without a ton of reg editting
#       #You can also sync it if you're using the same Windows account
#       #https://docs.microsoft.com/en-us/windows/win32/controls/themesfileformat-overview#slideshow-section
#       #%LOCALAPPDATA%\Microsoft\Windows\Themes\
#       SetTheme(env(f"{scriptDir}\\cobertos.theme"))()